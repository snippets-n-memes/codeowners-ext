# This is a basic workflow to help you get started with Actions

name: Codey

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: CODEOWNERS Check
        run: |
          FOLDERS=$(git diff --name-only origin/${GITHUB_HEAD_REF} origin/${GITHUB_BASE_REF} | awk -F '/' '{print $1}')

          while read -r FOLDER; do
            TEAM_SLUG=$(grep "$FOLDER" .github/CODEOWNERS | awk -F '@' '{print $2}' | awk -F '/' '{print $2}')
            member=$(curl -s \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/orgs/${GITHUB_REPOSITORY_OWNER}/teams/${TEAM_SLUG}/memberships/${GITHUB_ACTOR} \
              | jq -r '.state')

            if [ -z $TEAM_SLUG ]; then
              echo "FAIL: $FOLDER has no coverage in CODEOWNERS file, please correct this" >> results.log
            fi
            if [ $member = "null" ]; then
              echo "Change inconsisent with CODEOWNERS file detected" >&2
              echo "FAIL: $GITHUB_ACTOR not a member of $TEAM_SLUG which owns $FOLDER" >> results.log
            else
              echo "$GITHUB_ACTOR is a member of $TEAM_SLUG which owns $FOLDER" >> results.log
            fi
          done <<< "$FOLDERS"

          if $(cat results.log | grep -q "FAIL"); then
            cat results.log
            exit 1
          else
            cat results.log
          fi

